{
  "$id": "https://www.byteplug.io/standards/document-validator/1.0/schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "To be written.",
  "type": "object",
  "$ref": "#/$defs/value-type",
  "required": ["type"],
  "unevaluatedProperties": false,
  "$defs": {
    "value-type": {
      "properties": {
        "type": {
          "enum": [
            "flag",
            "integer",
            "decimal",
            "string",
            "enum",
            "list",
            "tuple",
            "map"
          ]
        }
      },
      "allOf": [
        {
          "if": {
            "properties": { "type": { "const": "flag" } },
            "required": ["type"]
          },
          "then": {
            "properties": {
              "type": { "enum": ["flag"] },
              "option": { "type": "boolean" }
            }
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "integer" } },
            "required": ["type"]
          },
          "then": {
            "properties": {
              "type": { "enum": ["integer"] },
              "minimum": {
                "$ref": "#/$defs/minimum-maximum-rules"
              },
              "maximum": {
                "$ref": "#/$defs/minimum-maximum-rules"
              },
              "option": { "type": "boolean" }
            }
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "decimal" } },
            "required": ["type"]
          },
          "then": {
            "properties": {
              "type": { "enum": ["decimal"] },
              "minimum": {
                "$ref": "#/$defs/minimum-maximum-rules"
              },
              "maximum": {
                "$ref": "#/$defs/minimum-maximum-rules"
              },
              "option": { "type": "boolean" }
            }
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "string" } },
            "required": ["type"]
          },
          "then": {
            "properties": {
              "type": { "enum": ["string"] },
              "length": { "$ref": "#/$defs/length-rules" },
              "pattern": { "type": "string" },
              "option": { "type": "boolean" }
            }
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "enum" } },
            "required": ["type"]
          },
          "then": {
            "properties": {
              "type": { "enum": ["enum"] },
              "values": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^[a-z]+(-[a-z]+)*$"
                }
              },
              "option": { "type": "boolean" }
            },
            "required": ["type", "values"]
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "list" } },
            "required": ["type"]
          },
          "then": {
            "properties": {
              "type": { "enum": ["list"] },
              "value": { "$ref": "#/$defs/value-type" },
              "length": { "$ref": "#/$defs/length-rules" },
              "option": { "type": "boolean" }
            },
            "required": ["type", "value"]
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "tuple" } },
            "required": ["type"]
          },
          "then": {
            "properties": {
              "type": { "enum": ["tuple"] },
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/$defs/value-type"
                }
              },
              "option": { "type": "boolean" }
            },
            "required": ["type", "values"]
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "map" } },
            "required": ["type"]
          },
          "then": {
            "properties": {
              "type": { "enum": ["map"] },
              "fields": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "$ref": "#/$defs/value-type",
                  "unevaluatedProperties": false
                },
                "propertyNames": {
                  "pattern": "^[a-z]+(-[a-z]+)*$"
                }
              },
              "option": { "type": "boolean" }
            },
            "required": ["type", "fields"]
          }
        }
      ]
    },
    "minimum-maximum-rules": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "object",
          "properties": {
            "exclusive": { "type": "boolean" },
            "value": { "type": "number" }
          },
          "required": ["value"],
          "additionalProperties": false
        }
      ]
    },
    "length-rules": {
      "anyOf": [
        {
          "type": "number",
          "minimum": 0
        },
        {
          "type": "object",
          "properties": {
            "minimum": {
              "type": "number" ,
              "minimum": 0
            },
            "maximum": {
              "type": "number" ,
              "minimum": 0
            }
          },
          "additionalProperties": false
        }
      ]
    }
  }
}
